# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI Pipeline

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:

  backend:
    name: Backend Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.x'

    - name: Build
      run: |
        cd backend
        go build -v ./...

    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
          | sh -s -- -b $(go env GOPATH)/bin v1.64.8

    - name: Lint backend
      run: |
        cd backend
        golangci-lint run ./...

    - name: Run tests
      run: |
        cd backend
        go test -v ./... 

    - name: Run tests with race detection
      run: |
        cd backend
        go test -v -race ./... 

    - name: Run tests with coverage (fail if <80%)
      run: |
        cd backend
        go test -coverprofile=coverage.out ./...
        go tool cover -func=coverage.out
        total=$(go tool cover -func=coverage.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
        echo "Total coverage: ${total}%"
        if (( $(echo "$total < 80" | bc -l) )); then
          echo "❌ Coverage below 80% threshold!"
          exit 1
        fi
