// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: submissions.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createSubmission = `-- name: CreateSubmission :one

INSERT INTO submissions (id, created_at, user_id, problem_id, code, language, status, runtime_ms, memory_kb, output)
VALUES($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
RETURNING id, created_at, user_id, problem_id, code, language, status, runtime_ms, memory_kb, output
`

type CreateSubmissionParams struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UserID    uuid.UUID
	ProblemID uuid.UUID
	Code      string
	Language  string
	Status    sql.NullString
	RuntimeMs sql.NullInt32
	MemoryKb  sql.NullInt32
	Output    sql.NullString
}

func (q *Queries) CreateSubmission(ctx context.Context, arg CreateSubmissionParams) (Submission, error) {
	row := q.db.QueryRowContext(ctx, createSubmission,
		arg.ID,
		arg.CreatedAt,
		arg.UserID,
		arg.ProblemID,
		arg.Code,
		arg.Language,
		arg.Status,
		arg.RuntimeMs,
		arg.MemoryKb,
		arg.Output,
	)
	var i Submission
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UserID,
		&i.ProblemID,
		&i.Code,
		&i.Language,
		&i.Status,
		&i.RuntimeMs,
		&i.MemoryKb,
		&i.Output,
	)
	return i, err
}
