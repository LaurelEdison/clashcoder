// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: lobbies.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createLobby = `-- name: CreateLobby :one
INSERT INTO lobbies(id, created_at, updated_at, invite_code, max_users, started_at, ended_at, status,ready_state)
VALUES($1,$2,$3,$4,$5,$6,$7,$8,$9)
RETURNING id, created_at, updated_at, invite_code, max_users, started_at, ended_at, status, ready_state
`

type CreateLobbyParams struct {
	ID         uuid.UUID
	CreatedAt  time.Time
	UpdatedAt  time.Time
	InviteCode string
	MaxUsers   int32
	StartedAt  sql.NullTime
	EndedAt    sql.NullTime
	Status     string
	ReadyState bool
}

func (q *Queries) CreateLobby(ctx context.Context, arg CreateLobbyParams) (Lobby, error) {
	row := q.db.QueryRowContext(ctx, createLobby,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.InviteCode,
		arg.MaxUsers,
		arg.StartedAt,
		arg.EndedAt,
		arg.Status,
		arg.ReadyState,
	)
	var i Lobby
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.InviteCode,
		&i.MaxUsers,
		&i.StartedAt,
		&i.EndedAt,
		&i.Status,
		&i.ReadyState,
	)
	return i, err
}

const getLobbyById = `-- name: GetLobbyById :one
SELECT id, created_at, updated_at, invite_code, max_users, started_at, ended_at, status, ready_state FROM lobbies WHERE id = $1
`

func (q *Queries) GetLobbyById(ctx context.Context, id uuid.UUID) (Lobby, error) {
	row := q.db.QueryRowContext(ctx, getLobbyById, id)
	var i Lobby
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.InviteCode,
		&i.MaxUsers,
		&i.StartedAt,
		&i.EndedAt,
		&i.Status,
		&i.ReadyState,
	)
	return i, err
}
